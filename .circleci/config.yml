# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
    
executors:
  docker-with-compose-executor:
    machine:
      image: ubuntu-2004:202111-01

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  install-api:
    executor: docker-with-compose-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "./services/api/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: | 
            cd ./services/api/
            yarn install --immutable
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "./services/api/yarn.lock" }}
          paths:
            - ./services/api/.yarn/cache
            - ./services/api/.yarn/unplugged
  code-check-api:
    executor: docker-with-compose-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "./services/api/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: | 
            cd ./services/api/
            yarn install --immutable
      - run:
          name: "Run API code check"
          command:  |
            cd ./services/api
            ./bin/start yarn code:check

  test-api:
    executor: docker-with-compose-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "./services/api/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: | 
            cd ./services/api/
            yarn install --immutable
      - run:
          name: "Run API tests"
          command: |
            cd ./services/api
            ./bin/start yarn test

workflows:
  # This workflow is set to be conditionally triggered, only when
  # the GitHub Action is triggered.
  # With no other workflows, normal push events will be ignored currently.
  api-install-check-test:
    jobs:
      - install-api:
        filters:
          branches:
            only:
              - master
      - code-check-api:
          requires:
            - install-api
      - test-api:
          requires:
            - code-check-api
